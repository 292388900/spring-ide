<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.springframework.ide.eclipse.core">
<annotation>
      <appInfo>
         <meta.schema plugin="org.springframework.ide.eclipse.core" id="builders" name="Spring Project Builders"/>
      </appInfo>
      <documentation>
         This extension-point is used to add one or more builders to the host plugin&apos;s list of builders. These builders are called for every modified file during incremental build of a Spring project.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="run" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  The fully-qualified name of the extension point.
That is &lt;samp&gt;org.springframework.ide.eclipse.core.builders&lt;/samp&gt;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  An optional id.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  An optional name.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="run">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the fully-qualified name of a class which implements 
&lt;samp&gt;org.springframework.ide.eclipse.core.project.IProjectBuilder&lt;/samp&gt;
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.2.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         Following is an example of a builder configuration: 

&lt;p&gt;
&lt;pre&gt;
   &lt;extension id=&quot;beansvalidator&quot; name=&quot;Spring Beans Config Validator&quot; point=&quot;org.springframework.ide.eclipse.core.builders&quot;&gt; 
      &lt;run class=&quot;org.springframework.ide.eclipse.beans.core.internal.project.BeansConfigValidator&quot;/&gt; 
   &lt;/extension&gt; 
&lt;/pre&gt;
&lt;/p&gt;

If this extension was defined in a plug-in with id &lt;samp&gt;org.springframework.ide.eclipse.beans.core&lt;/samp&gt;, the fully qualified name of this builder would be &lt;samp&gt;org.springframework.ide.eclipse.beans.core.beansvalidator&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Each builder must supply a public, no-argument constructor and implement the interface &lt;samp&gt;org.springframework.ide.eclipse.core.project.IProjectBuilder&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         This plugin itself does not have any predefined builders.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright 2002-2004 the original author or authors.

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
      </documentation>
   </annotation>

</schema>
